11 shift/reduce conflicts

error:  state 31: shift/reduce conflict (shift ELSE, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift EQ, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift DIVIDE, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift TIMES, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift MINUS, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift PLUS, reduce by rule 12)
error:  state 43: shift/reduce conflict (shift EQ, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift DIVIDE, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift TIMES, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift MINUS, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift PLUS, reduce by rule 13)

state 0:

	init : . program 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	init	goto 45
	program	goto 2
	exp	goto 1

	.	reduce by rule 2


state 1:

	program : exp . SEMICOLON program 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 

	SEMICOLON	shift 12
	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7


	.	error


state 2:

	init : program .  (reduce by rule 0)



	.	reduce by rule 0


state 3:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 13

	.	error


state 4:

	exp : LET . decs IN exps END 

	VAR	shift 17

	vardec	goto 16
	decs	goto 15
	dec	goto 14

	.	reduce by rule 22


state 5:

	exp : ID .  (reduce by rule 4)
	exp : ID . LPAREN expcomm RPAREN 

	LPAREN	shift 18


	.	reduce by rule 4


state 6:

	exp : INT .  (reduce by rule 3)



	.	reduce by rule 3


state 7:

	exp : exp EQ . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 19

	.	error


state 8:

	exp : exp DIVIDE . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 20

	.	error


state 9:

	exp : exp TIMES . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 21

	.	error


state 10:

	exp : exp MINUS . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 22

	.	error


state 11:

	exp : exp PLUS . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 23

	.	error


state 12:

	program : exp SEMICOLON . program 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	program	goto 24
	exp	goto 1

	.	reduce by rule 2


state 13:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 

	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7
	THEN	shift 25


	.	error


state 14:

	decs : dec . SEMICOLON decs 
	decs : dec .  (reduce by rule 21)

	SEMICOLON	shift 26


	.	reduce by rule 21


state 15:

	exp : LET decs . IN exps END 

	IN	shift 27


	.	error


state 16:

	dec : vardec .  (reduce by rule 23)



	.	reduce by rule 23


state 17:

	vardec : VAR . ID ASSIGN exp 

	ID	shift 28


	.	error


state 18:

	exp : ID LPAREN . expcomm RPAREN 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 30
	expcomm	goto 29

	.	reduce by rule 16


state 19:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 9)

	EQ	shift 7


	.	reduce by rule 9


state 20:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 8)
	exp : exp . EQ exp 

	PLUS	shift 11
	MINUS	shift 10
	EQ	shift 7


	.	reduce by rule 8


state 21:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 7)
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 

	PLUS	shift 11
	MINUS	shift 10
	EQ	shift 7


	.	reduce by rule 7


state 22:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 6)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 

	EQ	shift 7


	.	reduce by rule 6


state 23:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 5)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 

	EQ	shift 7


	.	reduce by rule 5


state 24:

	program : exp SEMICOLON program .  (reduce by rule 1)



	.	reduce by rule 1


state 25:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 31

	.	error


state 26:

	decs : dec SEMICOLON . decs 

	VAR	shift 17

	vardec	goto 16
	decs	goto 32
	dec	goto 14

	.	reduce by rule 22


state 27:

	exp : LET decs IN . exps END 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 34
	exps	goto 33

	.	reduce by rule 19


state 28:

	vardec : VAR ID . ASSIGN exp 

	ASSIGN	shift 35


	.	error


state 29:

	exp : ID LPAREN expcomm . RPAREN 

	RPAREN	shift 36


	.	error


state 30:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	expcomm : exp . COMMA expcomm 
	expcomm : exp .  (reduce by rule 15)

	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7
	COMMA	shift 37


	.	reduce by rule 15

error:  state 31: shift/reduce conflict (shift ELSE, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift EQ, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift DIVIDE, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift TIMES, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift MINUS, reduce by rule 12)
error:  state 31: shift/reduce conflict (shift PLUS, reduce by rule 12)

state 31:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : IF exp THEN exp .  (reduce by rule 12)
	exp : IF exp THEN exp . ELSE exp 

	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7
	ELSE	shift 38


	.	reduce by rule 12


state 32:

	decs : dec SEMICOLON decs .  (reduce by rule 20)



	.	reduce by rule 20


state 33:

	exp : LET decs IN exps . END 

	END	shift 39


	.	error


state 34:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exps : exp . SEMICOLON exps 
	exps : exp .  (reduce by rule 18)

	SEMICOLON	shift 40
	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7


	.	reduce by rule 18


state 35:

	vardec : VAR ID ASSIGN . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 41

	.	error


state 36:

	exp : ID LPAREN expcomm RPAREN .  (reduce by rule 11)



	.	reduce by rule 11


state 37:

	expcomm : exp COMMA . expcomm 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 30
	expcomm	goto 42

	.	reduce by rule 16


state 38:

	exp : IF exp THEN exp ELSE . exp 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 43

	.	error


state 39:

	exp : LET decs IN exps END .  (reduce by rule 10)



	.	reduce by rule 10


state 40:

	exps : exp SEMICOLON . exps 

	INT	shift 6
	ID	shift 5
	LET	shift 4
	IF	shift 3

	exp	goto 34
	exps	goto 44

	.	reduce by rule 19


state 41:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 24)

	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7


	.	reduce by rule 24


state 42:

	expcomm : exp COMMA expcomm .  (reduce by rule 14)



	.	reduce by rule 14

error:  state 43: shift/reduce conflict (shift EQ, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift DIVIDE, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift TIMES, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift MINUS, reduce by rule 13)
error:  state 43: shift/reduce conflict (shift PLUS, reduce by rule 13)

state 43:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 13)

	PLUS	shift 11
	MINUS	shift 10
	TIMES	shift 9
	DIVIDE	shift 8
	EQ	shift 7


	.	reduce by rule 13


state 44:

	exps : exp SEMICOLON exps .  (reduce by rule 17)



	.	reduce by rule 17


state 45:


	EOF	accept


	.	error

74 of 165 action table entries left after compaction
28 goto table entries
